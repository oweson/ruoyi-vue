<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.PublicSchoolMapper">
    
    <resultMap type="PublicSchool" id="PublicSchoolResult">
        <result property="id"    column="id"    />
        <result property="schoolId"    column="school_id"    />
        <result property="schoolName"    column="school_name"    />
        <result property="provinceId"    column="province_id"    />
        <result property="provinceName"    column="province_name"    />
        <result property="cityId"    column="city_id"    />
        <result property="cityName"    column="city_name"    />
        <result property="level"    column="level"    />
        <result property="department"    column="department"    />
        <result property="other"    column="other"    />
    </resultMap>

    <sql id="selectPublicSchoolVo">
        select id, school_id, school_name, province_id, province_name, city_id, city_name, level, department, other from public_school
    </sql>

    <select id="selectPublicSchoolList" parameterType="PublicSchool" resultMap="PublicSchoolResult">
        <include refid="selectPublicSchoolVo"/>
        <where>  
            <if test="schoolId != null  and schoolId != ''"> and school_id = #{schoolId}</if>
            <if test="schoolName != null  and schoolName != ''"> and school_name like concat('%', #{schoolName}, '%')</if>
            <if test="provinceName != null  and provinceName != ''"> and province_name = #{provinceName}</if>
            <if test="cityName != null  and cityName != ''"> and city_name like concat('%', #{cityName}, '%')</if>
        </where>
    </select>
    
    <select id="selectPublicSchoolById" parameterType="Long" resultMap="PublicSchoolResult">
        <include refid="selectPublicSchoolVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertPublicSchool" parameterType="PublicSchool" useGeneratedKeys="true" keyProperty="id">
        insert into public_school
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="schoolId != null">school_id,</if>
            <if test="schoolName != null">school_name,</if>
            <if test="provinceId != null">province_id,</if>
            <if test="provinceName != null">province_name,</if>
            <if test="cityId != null">city_id,</if>
            <if test="cityName != null">city_name,</if>
            <if test="level != null">level,</if>
            <if test="department != null">department,</if>
            <if test="other != null">other,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="schoolId != null">#{schoolId},</if>
            <if test="schoolName != null">#{schoolName},</if>
            <if test="provinceId != null">#{provinceId},</if>
            <if test="provinceName != null">#{provinceName},</if>
            <if test="cityId != null">#{cityId},</if>
            <if test="cityName != null">#{cityName},</if>
            <if test="level != null">#{level},</if>
            <if test="department != null">#{department},</if>
            <if test="other != null">#{other},</if>
         </trim>
    </insert>

    <update id="updatePublicSchool" parameterType="PublicSchool">
        update public_school
        <trim prefix="SET" suffixOverrides=",">
            <if test="schoolId != null">school_id = #{schoolId},</if>
            <if test="schoolName != null">school_name = #{schoolName},</if>
            <if test="provinceId != null">province_id = #{provinceId},</if>
            <if test="provinceName != null">province_name = #{provinceName},</if>
            <if test="cityId != null">city_id = #{cityId},</if>
            <if test="cityName != null">city_name = #{cityName},</if>
            <if test="level != null">level = #{level},</if>
            <if test="department != null">department = #{department},</if>
            <if test="other != null">other = #{other},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePublicSchoolById" parameterType="Long">
        delete from public_school where id = #{id}
    </delete>

    <delete id="deletePublicSchoolByIds" parameterType="String">
        delete from public_school where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>